(load "prekode3a.scm")

(define (mem message proc)
  (define mem-table (make-table))
  (define (lookup key table)
    (display "looking up key ")
    (display key) (newline)
    (let ((record (assoc key (cdr table))))
      (and record (cdr record))))
  (define memoize
    (lambda k
      (let ((prev-result (lookup k mem-table)))
        (or prev-result
            (let ((result (apply proc k)))
              (insert! k result mem-table))))))
  (define unmemoize '())
  (define (dispatch message proc)
    (cond
      ((eq? message 'memoize) memoize)
      ((eq? message 'unmemoize) unmemoize)))
  (dispatch message proc))

(set! fib (mem 'memoize fib))

(fib 1)
(fib 0)
(fib 2)